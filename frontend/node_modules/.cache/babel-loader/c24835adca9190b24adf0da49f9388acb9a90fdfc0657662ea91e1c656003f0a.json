{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shalu\\\\OneDrive\\\\Desktop\\\\Project\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is already logged in when component mounts\n  useEffect(() => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Failed to parse user from localStorage', error);\n        setUser(null);\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // Mock login function - replace with actual API call in production\n  const login = async (email, password) => {\n    // Simulate API call\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        // In a real app, validate credentials with your backend\n        if (email === 'user@example.com' && password === 'password') {\n          const userData = {\n            id: 1,\n            name: 'John Doe',\n            email: email\n          };\n          setUser(userData);\n          localStorage.setItem('user', JSON.stringify(userData));\n          resolve(userData);\n        } else {\n          reject(new Error('Invalid email or password'));\n        }\n      }, 1000);\n    });\n  };\n\n  // Mock register function - replace with actual API call in production\n  const register = async (name, email, password) => {\n    // Simulate API call\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        // In a real app, send registration data to your backend\n        try {\n          const userData = {\n            id: Date.now(),\n            // Generate a unique ID\n            name: name,\n            email: email\n          };\n          setUser(userData);\n          localStorage.setItem('user', JSON.stringify(userData));\n          resolve(userData);\n        } catch (error) {\n          reject(new Error('Registration failed'));\n        }\n      }, 1000);\n    });\n  };\n\n  // Logout function\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      register,\n      logout,\n      isAuthenticated: !!user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","error","console","login","email","password","Promise","resolve","reject","setTimeout","userData","id","name","setItem","stringify","Error","register","Date","now","logout","removeItem","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shalu/OneDrive/Desktop/Project/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check if user is already logged in when component mounts\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) {\r\n      try {\r\n        setUser(JSON.parse(savedUser));\r\n      } catch (error) {\r\n        console.error('Failed to parse user from localStorage', error);\r\n        setUser(null);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Mock login function - replace with actual API call in production\r\n  const login = async (email, password) => {\r\n    // Simulate API call\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        // In a real app, validate credentials with your backend\r\n        if (email === 'user@example.com' && password === 'password') {\r\n          const userData = {\r\n            id: 1,\r\n            name: 'John Doe',\r\n            email: email\r\n          };\r\n          \r\n          setUser(userData);\r\n          localStorage.setItem('user', JSON.stringify(userData));\r\n          resolve(userData);\r\n        } else {\r\n          reject(new Error('Invalid email or password'));\r\n        }\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  // Mock register function - replace with actual API call in production\r\n  const register = async (name, email, password) => {\r\n    // Simulate API call\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        // In a real app, send registration data to your backend\r\n        try {\r\n          const userData = {\r\n            id: Date.now(), // Generate a unique ID\r\n            name: name,\r\n            email: email\r\n          };\r\n          \r\n          setUser(userData);\r\n          localStorage.setItem('user', JSON.stringify(userData));\r\n          resolve(userData);\r\n        } catch (error) {\r\n          reject(new Error('Registration failed'));\r\n        }\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      user,\r\n      loading,\r\n      login,\r\n      register,\r\n      logout,\r\n      isAuthenticated: !!user\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
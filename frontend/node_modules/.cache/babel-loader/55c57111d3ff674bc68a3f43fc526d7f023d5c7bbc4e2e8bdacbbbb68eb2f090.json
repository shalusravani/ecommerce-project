{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shalu\\\\OneDrive\\\\Desktop\\\\Project\\\\frontend\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n  useEffect(() => {\n    // Load cart from localStorage if available\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      setCart(JSON.parse(savedCart));\n    }\n  }, []);\n  useEffect(() => {\n    // Save cart to localStorage and calculate total\n    localStorage.setItem('cart', JSON.stringify(cart));\n    const newTotal = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\n    setTotal(newTotal);\n  }, [cart]);\n  const addToCart = (product, quantity = 1) => {\n    setCart(prevCart => {\n      const existingItemIndex = prevCart.findIndex(item => item.id === product.id);\n      if (existingItemIndex >= 0) {\n        // Item exists, update quantity\n        const updatedCart = [...prevCart];\n        updatedCart[existingItemIndex] = {\n          ...updatedCart[existingItemIndex],\n          quantity: updatedCart[existingItemIndex].quantity + quantity\n        };\n        return updatedCart;\n      } else {\n        // Item doesn't exist, add new item\n        return [...prevCart, {\n          ...product,\n          quantity\n        }];\n      }\n    });\n  };\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\n  };\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    setCart(prevCart => prevCart.map(item => item.id === productId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n  const clearCart = () => {\n    setCart([]);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      total,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"Z/Q2NUAgGEmQ9+FH7s9v7ZX1aS4=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","total","setTotal","savedCart","localStorage","getItem","JSON","parse","setItem","stringify","newTotal","reduce","sum","item","price","quantity","addToCart","product","prevCart","existingItemIndex","findIndex","id","updatedCart","removeFromCart","productId","filter","updateQuantity","map","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shalu/OneDrive/Desktop/Project/frontend/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Load cart from localStorage if available\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      setCart(JSON.parse(savedCart));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Save cart to localStorage and calculate total\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n    const newTotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n    setTotal(newTotal);\r\n  }, [cart]);\r\n\r\n  const addToCart = (product, quantity = 1) => {\r\n    setCart(prevCart => {\r\n      const existingItemIndex = prevCart.findIndex(item => item.id === product.id);\r\n      \r\n      if (existingItemIndex >= 0) {\r\n        // Item exists, update quantity\r\n        const updatedCart = [...prevCart];\r\n        updatedCart[existingItemIndex] = {\r\n          ...updatedCart[existingItemIndex],\r\n          quantity: updatedCart[existingItemIndex].quantity + quantity\r\n        };\r\n        return updatedCart;\r\n      } else {\r\n        // Item doesn't exist, add new item\r\n        return [...prevCart, { ...product, quantity }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\r\n  };\r\n\r\n  const updateQuantity = (productId, quantity) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId);\r\n      return;\r\n    }\r\n\r\n    setCart(prevCart => \r\n      prevCart.map(item => \r\n        item.id === productId ? { ...item, quantity } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ \r\n      cart, \r\n      total, \r\n      addToCart, \r\n      removeFromCart, \r\n      updateQuantity,\r\n      clearCart\r\n    }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}